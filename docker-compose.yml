version: "3.7"

################## NETWORKS - Redes
networks:
  t2_proxy:
    external:
      name: t2_proxy
  default:
    driver: bridge

################## SERVICES - Serviços
services:
# Traefik 2 - Reverse Proxy - Proxy Reverso
  traefik:
    container_name: traefik  # Nome do container
    image: traefik:chevrotin # tag chevrotin se refere à v2.2.x
    restart: unless-stopped  # Sempre reiniciar se n for de propósito
    command: # Comandos cli / Ou configuração estática (podia ser em outro arquivo)
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=false
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
       # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
#    - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22
      - --entryPoints.traefik.address=:8080
      - --api=true
#     - --api.insecure=true # Dashboard do traefik ativado sem autentificação
#     - --serversTransport.insecureSkipVerify=true
      - --log=true
      - --log.level=DEBUG # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=400-499
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.defaultrule=Host(`{{ index .Labels "com.docker.compose.service" }}.$DOMAINNAME`)
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=t2_proxy
      - --providers.docker.swarmMode=false
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory.
#     - --providers.file.filename=/path/to/file # Load dynamic configuration from a file.
      - --providers.file.watch=true # Only works on top level files in the rules folder
        #- --certificatesResolvers.dns-duckdns.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing
      - --certificatesResolvers.dns-duckdns.acme.storage=/acme.json
      - -certificatesResolvers.dns-duckdns.acme.dnsChallenge.provider=duckdns
    networks:
      - t2_proxy
#   networks:
#     t2_proxy:
#       ipv4_address: 192.168.0.42 # Pode especificar um endereço de ip
    security_opt:
      - no-new-privileges:true # N deixa esse container escalar privilégios
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host    # Tudo isso ou - "80:80" 80 é porta padrão http
      - target: 443
        published: 443
        protocol: tcp
        mode: host   # 443 é porta do https
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host   # 8080 para dashboard do traefik
    volumes:
      - $USERDIR/docker/traefik2/rules:/rules # Setar esse /home/usuário... para clonar as coisas em /rules do container
      - /var/run/docker.sock:/var/run/docker.sock:ro # (Read only)
      - $USERDIR/docker/traefik2/acme/acme.json:/acme.json
      - $USERDIR/docker/traefik2/traefik.log:/traefik.log
      - $USERDIR/docker/shared:/shared
    environment:
      - DUCKDNS_TOKEN=$DUCKDNS_TOKEN # Passa pro ambiente docker o DUckdnsTOken do ambiente que está em .env (O nome da variável daqui tem que ser uma específica)
      - TZ=$TZ # Pegar timezone em .env
    labels:
      - "traefik.enable=true"
      # HTTP-to-HTTPS Redirect
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # HTTP Routers, entrypoints, resolver certificados, informação de domínio. 
      - "traefik.http.routers.traefik-rtr.entrypoints=https" 
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.$DOMAINNAME`)" # Local do dashboard do traefik
      - "traefik.http.routers.traefik-rtr.tls=true" # Somente por https, nada de http
        #- "traefik.http.routers.traefik-rtr.tls.certresolver=dns-duckdns" # Comment out this line after first run of traefik to force the use of wildcard certs
      - "traefik.http.routers.traefik-rtr.tls.domains[0].main=$DOMAINNAME"
      - "traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.$DOMAINNAME"
#     - "traefik.http.routers.traefik-rtr.tls.domains[1].main=$SECONDDOMAINNAME" # Pulls main cert for second domain
#     - "traefik.http.routers.traefik-rtr.tls.domains[1].sans=*.$SECONDDOMAINNAME" # Pulls wildcard cert for second domain
      ## Services - API
      - "traefik.http.routers.traefik-rtr.service=api@internal" # Definindo o dashboard / traefik
      ## Middlewares
      # - "traefik.http.routers.traefik-rtr.middlewares=middlewares-basic-auth@file"  # Usando autenticação básica com usuário e senha feitos anteriormente
      # - "traefik.http.routers.traefik-rtr.middlewares=middlewares-rate-limit@file,middlewares-basic-auth@file" # Usando autenticação básica com senha e usuário + rate-limit
      # - "traefik.http.routers.traefik-rtr.middlewares=middlewares-secure-headers@file,middlewares-rate-limit@file,middlewares-basic-auth@file" # + Headers seguros
      # - "traefik.http.routers.traefik-rtr.middlewares=chain-basic-auth@file"  # Tudo isso numa chain de middlewares, em middleware-chains.toml
      - "traefik.http.routers.traefik-rtr.middlewares=chain-authelia@file"  # Authelia

# Authelia (Lite) - Self-hosted Single Sign on and Two-Factor Authentication
  authelia:
    container_name: authelia
    # Check this before upgrading: https://github.com/authelia/authelia/blob/master/BREAKING.md
    # image: authelia/authelia:latest
    image: authelia/authelia:4.20
    restart: always
    networks:
      - t2_proxy
        #ports:
        #  - "9091:9091"
    volumes:
      - $USERDIR/docker/authelia:/config
    environment:
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
        ## HTTP Routers
      - "traefik.http.routers.authelia-rtr.entrypoints=https"
      - "traefik.http.routers.authelia-rtr.rule=Host(`auth.$DOMAINNAME`)"
      - 'traefik.http.routers.authelia-rtr.tls=true'
        ## Middlewares
      - "traefik.http.routers.authelia-rtr.middlewares=chain-authelia@file"

# Portainer - WebUI for Containers
  portainer:
    container_name: portainer
    image: portainer/portainer
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock --no-auth
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
        #    ports:
        #      - "$PORTAINER_PORT:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $USERDIR/docker/portainer/data:/data 
    environment:
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
        ## HTTP Routers
      - "traefik.http.routers.portainer-rtr.entrypoints=https"
      - "traefik.http.routers.portainer-rtr.rule=Host(`portainer.$DOMAINNAME`)"
      - "traefik.http.routers.portainer-rtr.tls=true"
        ## Middlewares
      - "traefik.http.routers.portainer-rtr.middlewares=chain-authelia@file"
# Syncthing - Sincronização de arquivos
  syncthing:
    container_name: syncthing
    image: linuxserver/syncthing
    restart: unless-stopped
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=$TZ
      - UMASK_SET=022
    volumes:
      - $USERDIR/docker/syncthing/config:/config
      - /mnt/secundum/:/ext # Se mudar, recriar o container
    ports:
      - 8384:8384
      - 22000:22000
      - 21027:21027/udp
    labels:
      - "traefik.enable=false"
# Nginx - Servir conteúdo
  static:
    container_name: static
    image: nginx:alpine
    restart: unless-stopped
    networks: 
      - t2_proxy
    environment:
      - NGINX_HOST=$DOMAINNAME
      - NGINX_PORT=80
    volumes:
      - $USERDIR/docker/static/content:/usr/share/nginx/html:ro
    labels:
      - "traefik.enable=true"
        ## HTTP Routers
      - "traefik.http.routers.nginx-rtr.entrypoints=https"
      - "traefik.http.routers.nginx-rtr.rule=Host(`$DOMAINNAME`)"
      - "traefik.http.routers.nginx-rtr.tls=true"
        ## Middlewares
      - "traefik.http.routers.nginx-rtr.middlewares=chain-no-auth@file"
